class Test
{
    public static void main(String[] args)
    {
        beginvars
            int locationZero;
            int locationOne;
            int testInt;
            String testString;
            int[] arr;
            String[] testStrArr;
            String testStr;
            Test X;
            Test2 Y;
            Test3 Z;
            boolean testBool;
        endvars
        {
            
            System.out.println("$$$ Testing println stuff: $$$");
            System.out.println("testing");
            System.out.println(42);
            System.out.println(true);
            System.out.println(false);
            System.out.println(null);
            
        }
        {
            
            System.out.println("$$$ Testing Operators: $$$");
            System.out.println(1+2);
            System.out.println(4-2);
            System.out.println(7*7);
            System.out.println(49/7);
            System.out.println(6 > 5);
            System.out.println(6 < 5);
            System.out.println(6 >= 6);
            System.out.println(6 <= 7);
            System.out.println(4 == 3);
            System.out.println(4 != 3);
            
        }
        {
            
            System.out.println("$$$ Testing Assignment: $$$");
            testInt = 88;
            testString = "fail";
            testInt = 152;
            locationZero = testInt-12;
            testString = "testMe";
            System.out.println(testInt);
            System.out.println(locationZero);
            System.out.println(testString);
            
        }
        {
            
            System.out.println("$$$ Testing arrays: $$$");
            arr = new int[5];
            arr[1] = 7;
            testInt = arr[1];
            System.out.println(testInt);
            testStrArr = new String[5];
            testStrArr[1] = "seven";
            testStr = testStrArr[1];
            System.out.println(testStr);
            
        }
        {
            System.out.println("$$$ Testing objects: $$$");
            X = new Test();
            Y = new Test2();
            testInt = Y.callMe(140, 42, 37);
            System.out.println(testInt);
            testStr = Y.callMe2("testing", "another");
            System.out.println(testStr);
            testStrArr = Y.callMe3(testStrArr);
            System.out.println(testStrArr[0]);
            System.out.println(testStrArr[1]);
            System.out.println(testStrArr[2]);
            System.out.println(testStrArr[3]);
            System.out.println(testStrArr[4]);
            arr = Y.callMe4(arr);
            System.out.println(arr[1]);
            X = Y.callMe5(X);
            testBool = Y.callMe7(true, false);
            System.out.println(testBool);
            X.testMe();
            Z = new Test3();
            Z.callMe6();
        }
        return 0;
    }

    public int testMe()
    {
        beginvars
        endvars
        System.out.println("Called testMe!");
        return 21;
    }
}

class Test2
{
    // Test ability to call and return ints
    public int callMe(int i0, int i1, int i2)
    {
        beginvars
            int i3;
        endvars
        i3 = 343;
        System.out.println("CallMe Called!");
        System.out.println(i0);
        System.out.println(i1);
        System.out.println(i2);
        return i3;
    }

    // Test ability to call and return strings
    public String callMe2(String test, String s2)
    {
        beginvars
            int i1;
        endvars
        System.out.println("CallMe2 Called!");
        System.out.println(test);
        test = "string return";
        System.out.println(test);
        return test;
    }

    // Test ability to pass and return String[]'s
    public String[] callMe3(String[] test)
    {
        beginvars
            String[] strArr;
        endvars
        System.out.println("CallMe3 Called!");
        System.out.println(test[1]);
        strArr = new String[5];
        strArr[0] = "1st element";
        strArr[1] = "2nd element";
        strArr[2] = "3rd element";
        strArr[3] = "4th element";
        strArr[4] = "5th element";
        return strArr;
    }

    // Test ability to pass and return int[]'s
    public int[] callMe4(int[] test)
    {
        beginvars
        	int[] iA;
        endvars
        System.out.println("CallMe4 Called!");
        iA = new int[5];
        iA[0] = 34;
        iA[1] = 32;
        return iA;
    }
    
    // Test ability to pass and return bools
    public boolean callMe7(boolean b1, boolean b2)
    {
    	beginvars
    		boolean bool1;
    		boolean bool2;
    	endvars
    	bool1 = true;
    	bool2 = false;
    	System.out.println("Callme7 Called!");
    	System.out.println(bool1);
    	System.out.println(bool2);
    	System.out.println(b1);
    	System.out.println(b2);
    	return false;
    }
    
    // Test ability to pass and return Objects
    public Test callMe5(Test x)
    {
    	beginvars
            int locInt;
            Test newX;
    	endvars
        System.out.println("CallMe5 called!");
        newX = new Test();
        System.out.println(x);
        newX.testMe();
        x.testMe();
    	return newX;
    }
}

class Test3
{
    int fieldInt;
    String fieldStr;

    // Test ability to find fields
    public int callMe6()
    {
        beginvars
        endvars
        fieldInt = 300;
        fieldStr = "teeeeest";
        System.out.println(fieldInt);
        System.out.println(fieldStr);
        return 142;
    }
}
